{"ast":null,"code":"import _defineProperty from \"D:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PlayerActionTypes } from \"../../types/player\";\nconst initialState = {\n  currentTime: 0,\n  duration: 0,\n  active: null,\n  volume: 50,\n  pause: true\n};\nexport const playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PlayerActionTypes.PAUSE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pause: true\n      });\n\n    case PlayerActionTypes.PLAY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pause: false\n      });\n\n    case PlayerActionTypes.SET_ACTIVE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        active: action.payload,\n        duration: 0,\n        currentTime: 0\n      });\n\n    case PlayerActionTypes.SET_CURRENT_TIME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentTime: action.payload\n      });\n\n    case PlayerActionTypes.SET_DURATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        duration: action.payload\n      });\n\n    case PlayerActionTypes.SET_VOLUME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        volume: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/store/reducers/playerReducer.ts"],"names":["PlayerActionTypes","initialState","currentTime","duration","active","volume","pause","playerReducer","state","action","type","PAUSE","PLAY","SET_ACTIVE","payload","SET_CURRENT_TIME","SET_DURATION","SET_VOLUME"],"mappings":";;;;;;AAAA,SAAuBA,iBAAvB,QAA6D,oBAA7D;AAEA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,WAAW,EAAE,CADiB;AAE9BC,EAAAA,QAAQ,EAAE,CAFoB;AAG9BC,EAAAA,MAAM,EAAE,IAHsB;AAI9BC,EAAAA,MAAM,EAAE,EAJsB;AAK9BC,EAAAA,KAAK,EAAE;AALuB,CAAlC;AAQA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAA6D;AACtF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,iBAAiB,CAACW,KAAvB;AACI,6CAAYH,KAAZ;AAAmBF,QAAAA,KAAK,EAAE;AAA1B;;AACJ,SAAKN,iBAAiB,CAACY,IAAvB;AACI,6CAAYJ,KAAZ;AAAmBF,QAAAA,KAAK,EAAE;AAA1B;;AACJ,SAAKN,iBAAiB,CAACa,UAAvB;AACI,6CAAYL,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEK,MAAM,CAACK,OAAlC;AAA2CX,QAAAA,QAAQ,EAAE,CAArD;AAAwDD,QAAAA,WAAW,EAAE;AAArE;;AACJ,SAAKF,iBAAiB,CAACe,gBAAvB;AACI,6CAAYP,KAAZ;AAAmBN,QAAAA,WAAW,EAAEO,MAAM,CAACK;AAAvC;;AACJ,SAAKd,iBAAiB,CAACgB,YAAvB;AACI,6CAAYR,KAAZ;AAAmBL,QAAAA,QAAQ,EAAEM,MAAM,CAACK;AAApC;;AACJ,SAAKd,iBAAiB,CAACiB,UAAvB;AACI,6CAAYT,KAAZ;AAAmBH,QAAAA,MAAM,EAAEI,MAAM,CAACK;AAAlC;;AACJ;AACI,aAAON,KAAP;AAdR;AAgBH,CAjBM","sourcesContent":["import { PlayerAction, PlayerActionTypes, PlayerState } from \"../../types/player\"\r\n\r\nconst initialState: PlayerState = {\r\n    currentTime: 0,\r\n    duration: 0,\r\n    active: null,\r\n    volume: 50,\r\n    pause: true\r\n}\r\n\r\nexport const playerReducer = (state = initialState, action: PlayerAction): PlayerState => {\r\n    switch (action.type) {\r\n        case PlayerActionTypes.PAUSE:\r\n            return { ...state, pause: true }\r\n        case PlayerActionTypes.PLAY:\r\n            return { ...state, pause: false }\r\n        case PlayerActionTypes.SET_ACTIVE:\r\n            return { ...state, active: action.payload, duration: 0, currentTime: 0 }\r\n        case PlayerActionTypes.SET_CURRENT_TIME:\r\n            return { ...state, currentTime: action.payload }\r\n        case PlayerActionTypes.SET_DURATION:\r\n            return { ...state, duration: action.payload }\r\n        case PlayerActionTypes.SET_VOLUME:\r\n            return { ...state, volume: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}