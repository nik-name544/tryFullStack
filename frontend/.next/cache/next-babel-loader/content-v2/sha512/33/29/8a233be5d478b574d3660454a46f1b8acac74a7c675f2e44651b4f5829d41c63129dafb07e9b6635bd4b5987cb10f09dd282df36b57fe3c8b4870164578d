{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"d:\\\\visual\\\\js\\\\startReact\\\\startReact1\\\\tryfullstack\\\\tryfrontnew\\\\pages\\\\tracks\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MainLayout } from '../../MainLayout/MainLayout';\nimport { Grid, Card, Button, Box, TextField } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport TrackList from '../../components/TrackList';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\n\nconst Tracks = () => {\n  _s();\n\n  const router = useRouter();\n  const {\n    tracks,\n    error\n  } = useTypedSelector(state => state.track);\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n\n  const search = e => {\n    setQuery(e.target.value);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MainLayout, {\n      title: \"trekichi\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: 900\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 3,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"tracks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => router.push('/tracks/create'),\n                children: \"Dwnld\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            value: query,\n            onChange: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TrackList, {\n            tracks: tracks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Tracks, \"KB1URayyf8I3NdlmR2bB9X4CDaU=\", false, function () {\n  return [useRouter, useTypedSelector];\n});\n\n_c = Tracks;\nexport var __N_SSP = true;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"sources":["d:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/pages/tracks/index.tsx"],"names":["React","useState","MainLayout","Grid","Card","Button","Box","TextField","useRouter","TrackList","useTypedSelector","Tracks","router","tracks","error","state","track","query","setQuery","search","e","target","value","width","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,GAA7B,EAAkCC,SAAlC,QAAmD,mBAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAKA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBJ,gBAAgB,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA1C;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAAS,EAAT,CAAlC;;AACA,QAAMkB,MAAM,GAAIC,CAAD,IAA4C;AACvDF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAGA,MAAIR,KAAJ,EAAW;AACP,wBAAO,QAAC,UAAD;AAAA,6BACH;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AACD,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE,UAAnB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,cAAc,EAAC,QAA/B;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAES,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,CAAC,EAAE,CAAR;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,cAAc,EAAC,eAA/B;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,MAAMX,MAAM,CAACY,IAAP,CAAY,gBAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,KAAK,EAAEP,KAFX;AAGI,YAAA,QAAQ,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA,kBATJ,eAcI,QAAC,SAAD;AAAW,YAAA,MAAM,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwBH,CApCD;;GAAMF,M;UACaH,S,EACWE,gB;;;KAFxBC,M;;AAsCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { NavBar } from '../../components/Navbar'\r\nimport c from './tracks.module.scss'\r\nimport { MainLayout } from '../../MainLayout/MainLayout'\r\nimport { Grid, Card, Button, Box, TextField } from '@material-ui/core'\r\nimport { useRouter } from 'next/router'\r\nimport { ITrack } from '../../types/track'\r\nimport TrackList from '../../components/TrackList'\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\r\nimport { useAction } from '../../hooks/useAction'\r\nimport { wrapper, NextThunkDispatch } from '../../store'\r\nimport { fetchTracks } from '../../store/actions-creators/track'\r\n\r\nconst Tracks = () => {\r\n    const router = useRouter()\r\n    const { tracks, error } = useTypedSelector(state => state.track)\r\n    const [query, setQuery] = useState<String>(\"\")\r\n    const search = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setQuery(e.target.value)\r\n    }\r\n    if (error) {\r\n        return <MainLayout>\r\n            <h1>{error}</h1>\r\n        </MainLayout>\r\n    }\r\n    return (\r\n        <>\r\n            <MainLayout title={\"trekichi\"}>\r\n                <Grid container justifyContent='center'>\r\n                    <Card style={{ width: 900 }}>\r\n                        <Box p={3}>\r\n                            <Grid container justifyContent='space-between'>\r\n                                <h1>tracks</h1>\r\n                                <Button onClick={() => router.push('/tracks/create')}>\r\n                                    Dwnld\r\n                                </Button>\r\n                            </Grid>\r\n                        </Box>\r\n                        <TextField\r\n                            fullWidth\r\n                            value={query}\r\n                            onChange={search}\r\n                        />\r\n                        <TrackList tracks={tracks} />\r\n                    </Card>\r\n                </Grid>\r\n            </MainLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tracks\r\n\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async ({ store }) => {\r\n    const dispatch = store.dispatch as NextThunkDispatch\r\n    await dispatch(await fetchTracks())\r\n})"]},"metadata":{},"sourceType":"module"}