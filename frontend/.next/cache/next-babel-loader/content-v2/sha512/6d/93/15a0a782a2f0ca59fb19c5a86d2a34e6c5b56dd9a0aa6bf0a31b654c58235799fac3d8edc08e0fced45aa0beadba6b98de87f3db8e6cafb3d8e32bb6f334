{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"d:\\\\visual\\\\js\\\\startReact\\\\startReact1\\\\tryfullstack\\\\tryfrontnew\\\\pages\\\\tracks\\\\create.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { Button, Grid, TextField } from '@material-ui/core'\n// import React, { useState } from 'react'\n// import FileUpload from '../../components/FileUpload'\n// import StepWrapper from '../../components/StepWrapper'\n// import { MainLayout } from '../../MainLayout/MainLayout'\n// import c from './tracks.module.scss'\n// import { useInput } from '../../hooks/useInput'\n// import axios from 'axios'\n// import { useRouter } from 'next/router'\n// const Create = () => {\n//     const [img, setImg] = useState(null)\n//     const [track, setTrack] = useState(null)\n//     const [num, setNum] = useState(0)\n//     const [isDisabled, setIsDisabled] = useState(false)\n//     const [isDisabled1, setIsDisabled1] = useState(false)\n//     const name = useInput('')\n//     const artist = useInput('')\n//     const text = useInput('')\n//     const router = useRouter()\n//     let StepContent = ({ className, label, value }) => {\n//         console.log(value)\n//         return (\n//             <Grid container direction=\"column\" className={className[0]}>\n//                 <TextField label={label[0]} className={className[1]} {...value[\"name\"]} />\n//                 <TextField label={label[1]} className={className[1]}  {...value[\"artist\"]} />\n//                 <TextField label={label[2]} className={className[1]} multiline rows={3}  {...value[\"text\"]} />\n//             </Grid>\n//         )\n//     }\n//     let StepContentFile = ({ accept, setFile, text }) => {\n//         return (\n//             <FileUpload setFile={setFile} accept={accept}>\n//                 <Button>\n//                     {text}\n//                 </Button>\n//             </FileUpload>\n//         )\n//     }\n//     let sendData = () => {\n//         console.log(track)\n//         const formData = new FormData()\n//         formData.append(\"name\", name.value)\n//         formData.append(\"artist\", artist.value)\n//         formData.append(\"text\", text.value)\n//         formData.append(\"picture\", img)\n//         formData.append(\"audio\", track)\n//         axios.post(\"http://localhost:5000/tracks\", formData).then(res => router.push(\"/tracks\")).catch(e => console.log(e))\n//     }\n//     return (\n//         <MainLayout>\n//             <StepWrapper activeStep={num}>\n//                 {\n//                     num === 0 ?\n//                         <StepContent className={[`${c.stepContent}`, `${c.stepContent__item}`]} label={[\"track name\", \"author name\", \"text\"]} value={{ \"name\": name, \"artist\": artist, \"text\": text }} /> :\n//                         num === 1 ?\n//                             <StepContentFile accept={\"image/\"} setFile={setImg} text={\"upld cover\"} /> :\n//                             num === 2 ?\n//                                 <StepContentFile accept={\"audio/\"} setFile={setTrack} text={\"upld track\"} /> :\n//                                 sendData()\n//                     // \"\"\n//                 }\n//             </StepWrapper>\n//             <Grid container justifyContent=\"space-between\">\n//                 <Button\n//                     disabled={isDisabled}\n//                     onClick={\n//                         () => {\n//                             num > 0 ?\n//                                 (setNum(num - 1), setIsDisabled(false)) :\n//                                 (setNum(num), setIsDisabled(true), setIsDisabled1(false))\n//                         }\n//                     }\n//                 >back\n//                 </Button>\n//                 <Button\n//                     disabled={isDisabled1}\n//                     onClick={\n//                         () => {\n//                             num <= 2 ?\n//                                 (setNum(num + 1), setIsDisabled(false)) :\n//                                 (setNum(num), setIsDisabled1(true), setIsDisabled(false))\n//                         }\n//                     }\n//                 >\n//                     next\n//                 </Button>\n//             </Grid>\n//         </MainLayout>\n//     )\n// }\n// export default Create\nimport React, { useState } from 'react';\nimport StepWrapper from \"../../components/StepWrapper\";\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport FileUpload from \"../../components/FileUpload\";\nimport { useInput } from \"../../hooks/useInput\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { MainLayout } from '../../MainLayout/MainLayout';\n\nconst Create = () => {\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const {\n    0: picture,\n    1: setPicture\n  } = useState(null);\n  const {\n    0: audio,\n    1: setAudio\n  } = useState(null);\n  const name = useInput('');\n  const artist = useInput('');\n  const text = useInput('');\n  const router = useRouter();\n\n  const next = () => {\n    if (activeStep !== 2) {\n      setActiveStep(prev => prev + 1);\n    } else {\n      const formData = new FormData();\n      formData.append('name', name.value);\n      formData.append('text', text.value);\n      formData.append('artist', artist.value);\n      formData.append('picture', picture);\n      formData.append('audio', audio);\n      axios.post('http://localhost:5000/tracks', formData).then(resp => router.push('/tracks')).catch(e => console.log(e));\n    }\n  };\n\n  const back = () => {\n    setActiveStep(prev => prev - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(StepWrapper, {\n      activeStep: activeStep,\n      children: [activeStep === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        style: {\n          padding: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, name), {}, {\n          style: {\n            marginTop: 10\n          },\n          label: \"Название трека\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, artist), {}, {\n          style: {\n            marginTop: 10\n          },\n          label: \"Имя исполнителя\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, text), {}, {\n          style: {\n            marginTop: 10\n          },\n          label: \"Слова к треку\",\n          multiline: true,\n          rows: 3\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(FileUpload, {\n        setFile: setPicture,\n        accept: \"image/*\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(FileUpload, {\n        setFile: setAudio,\n        accept: \"audio/*\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0430\\u0443\\u0434\\u0438\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: activeStep === 0,\n        onClick: back,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: next,\n        children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Create;","map":{"version":3,"sources":["d:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/pages/tracks/create.tsx"],"names":["React","useState","StepWrapper","Button","Grid","TextField","FileUpload","useInput","axios","useRouter","MainLayout","Create","activeStep","setActiveStep","picture","setPicture","audio","setAudio","name","artist","text","router","next","prev","formData","FormData","append","value","post","then","resp","push","catch","e","console","log","back","padding","marginTop"],"mappings":"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","sourcesContent":["// import { Button, Grid, TextField } from '@material-ui/core'\r\n// import React, { useState } from 'react'\r\n// import FileUpload from '../../components/FileUpload'\r\n// import StepWrapper from '../../components/StepWrapper'\r\n// import { MainLayout } from '../../MainLayout/MainLayout'\r\n// import c from './tracks.module.scss'\r\n// import { useInput } from '../../hooks/useInput'\r\n// import axios from 'axios'\r\n// import { useRouter } from 'next/router'\r\n\r\n// const Create = () => {\r\n//     const [img, setImg] = useState(null)\r\n//     const [track, setTrack] = useState(null)\r\n//     const [num, setNum] = useState(0)\r\n//     const [isDisabled, setIsDisabled] = useState(false)\r\n//     const [isDisabled1, setIsDisabled1] = useState(false)\r\n//     const name = useInput('')\r\n//     const artist = useInput('')\r\n//     const text = useInput('')\r\n//     const router = useRouter()\r\n\r\n//     let StepContent = ({ className, label, value }) => {\r\n//         console.log(value)\r\n//         return (\r\n//             <Grid container direction=\"column\" className={className[0]}>\r\n//                 <TextField label={label[0]} className={className[1]} {...value[\"name\"]} />\r\n//                 <TextField label={label[1]} className={className[1]}  {...value[\"artist\"]} />\r\n//                 <TextField label={label[2]} className={className[1]} multiline rows={3}  {...value[\"text\"]} />\r\n//             </Grid>\r\n//         )\r\n//     }\r\n//     let StepContentFile = ({ accept, setFile, text }) => {\r\n//         return (\r\n//             <FileUpload setFile={setFile} accept={accept}>\r\n//                 <Button>\r\n//                     {text}\r\n//                 </Button>\r\n//             </FileUpload>\r\n//         )\r\n//     }\r\n//     let sendData = () => {\r\n//         console.log(track)\r\n//         const formData = new FormData()\r\n//         formData.append(\"name\", name.value)\r\n//         formData.append(\"artist\", artist.value)\r\n//         formData.append(\"text\", text.value)\r\n//         formData.append(\"picture\", img)\r\n//         formData.append(\"audio\", track)\r\n//         axios.post(\"http://localhost:5000/tracks\", formData).then(res => router.push(\"/tracks\")).catch(e => console.log(e))\r\n//     }\r\n//     return (\r\n//         <MainLayout>\r\n//             <StepWrapper activeStep={num}>\r\n//                 {\r\n//                     num === 0 ?\r\n//                         <StepContent className={[`${c.stepContent}`, `${c.stepContent__item}`]} label={[\"track name\", \"author name\", \"text\"]} value={{ \"name\": name, \"artist\": artist, \"text\": text }} /> :\r\n//                         num === 1 ?\r\n//                             <StepContentFile accept={\"image/\"} setFile={setImg} text={\"upld cover\"} /> :\r\n//                             num === 2 ?\r\n//                                 <StepContentFile accept={\"audio/\"} setFile={setTrack} text={\"upld track\"} /> :\r\n//                                 sendData()\r\n//                     // \"\"\r\n//                 }\r\n//             </StepWrapper>\r\n//             <Grid container justifyContent=\"space-between\">\r\n//                 <Button\r\n//                     disabled={isDisabled}\r\n//                     onClick={\r\n//                         () => {\r\n//                             num > 0 ?\r\n//                                 (setNum(num - 1), setIsDisabled(false)) :\r\n//                                 (setNum(num), setIsDisabled(true), setIsDisabled1(false))\r\n//                         }\r\n//                     }\r\n//                 >back\r\n//                 </Button>\r\n//                 <Button\r\n//                     disabled={isDisabled1}\r\n//                     onClick={\r\n//                         () => {\r\n//                             num <= 2 ?\r\n//                                 (setNum(num + 1), setIsDisabled(false)) :\r\n//                                 (setNum(num), setIsDisabled1(true), setIsDisabled(false))\r\n//                         }\r\n//                     }\r\n//                 >\r\n//                     next\r\n//                 </Button>\r\n//             </Grid>\r\n//         </MainLayout>\r\n//     )\r\n// }\r\n\r\n// export default Create\r\n\r\n\r\nimport React, { useState } from 'react'; \r\nimport StepWrapper from \"../../components/StepWrapper\";\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport FileUpload from \"../../components/FileUpload\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport { MainLayout } from '../../MainLayout/MainLayout';\r\n\r\nconst Create = () => {\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const [picture, setPicture] = useState(null)\r\n    const [audio, setAudio] = useState(null)\r\n    const name = useInput('')\r\n    const artist = useInput('')\r\n    const text = useInput('')\r\n    const router = useRouter()\r\n\r\n    const next = () => {\r\n        if (activeStep !== 2) {\r\n            setActiveStep(prev => prev + 1)\r\n        } else {\r\n            const formData = new FormData()\r\n            formData.append('name', name.value)\r\n            formData.append('text', text.value)\r\n            formData.append('artist', artist.value)\r\n            formData.append('picture', picture)\r\n            formData.append('audio', audio)\r\n            axios.post('http://localhost:5000/tracks', formData)\r\n                .then(resp => router.push('/tracks'))\r\n                .catch(e => console.log(e))\r\n        }\r\n    }\r\n\r\n    const back = () => {\r\n        setActiveStep(prev => prev - 1);\r\n    }\r\n\r\n    return (\r\n        <MainLayout>\r\n            <StepWrapper activeStep={activeStep}>\r\n                {activeStep === 0 &&\r\n                    <Grid container direction={\"column\"} style={{ padding: 20 }}>\r\n                        <TextField\r\n                            {...name}\r\n                            style={{ marginTop: 10 }}\r\n                            label={\"Название трека\"}\r\n                        />\r\n                        <TextField\r\n                            {...artist}\r\n                            style={{ marginTop: 10 }}\r\n                            label={\"Имя исполнителя\"}\r\n                        />\r\n                        <TextField\r\n                            {...text}\r\n                            style={{ marginTop: 10 }}\r\n                            label={\"Слова к треку\"}\r\n                            multiline\r\n                            rows={3}\r\n                        />\r\n                    </Grid>\r\n                }\r\n                {activeStep === 1 &&\r\n                    <FileUpload setFile={setPicture} accept=\"image/*\">\r\n                        <Button>Загрузить изображение</Button>\r\n                    </FileUpload>\r\n                }\r\n                {activeStep === 2 &&\r\n                    <FileUpload setFile={setAudio} accept=\"audio/*\">\r\n                        <Button>Загрузить аудио</Button>\r\n                    </FileUpload>\r\n                }\r\n            </StepWrapper>\r\n            <Grid container justifyContent='space-between'>\r\n                <Button disabled={activeStep === 0} onClick={back}>Назад</Button>\r\n                <Button onClick={next}>Далее</Button>\r\n            </Grid>\r\n        </MainLayout>\r\n    );\r\n};\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}