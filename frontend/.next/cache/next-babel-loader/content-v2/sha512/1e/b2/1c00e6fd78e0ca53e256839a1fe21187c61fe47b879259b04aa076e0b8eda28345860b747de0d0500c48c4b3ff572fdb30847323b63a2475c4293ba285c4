{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { createWrapper } from 'next-redux-wrapper';\nimport { reducer } from \"./reducers\";\nimport thunk from 'redux-thunk';\n\nconst makeStore = context => createStore(reducer, applyMiddleware(thunk)); // const makeStore: MakeStore<RootState> = { context: Context }=> createStore(reducer)\n\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["d:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/store/index.ts"],"names":["createStore","applyMiddleware","createWrapper","reducer","thunk","makeStore","context","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAAwD,OAAxD;AACA,SAA6BC,aAA7B,QAAkD,oBAAlD;AACA,SAASC,OAAT,QAAmC,YAAnC;AACA,OAAOC,KAAP,MAAsC,aAAtC;;AAEA,MAAMC,SAA+B,GAAKC,OAAD,IAAsBN,WAAW,CAACG,OAAD,EAAUF,eAAe,CAACG,KAAD,CAAzB,CAA1E,C,CACA;;;AAEA,OAAO,MAAMG,OAAO,GAAGL,aAAa,CAAYG,SAAZ,EAAuB;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAvB,CAA7B","sourcesContent":["import { createStore, applyMiddleware, AnyAction } from \"redux\"\r\nimport { MakeStore, Context, createWrapper } from 'next-redux-wrapper'\r\nimport { reducer, RootState } from \"./reducers\"\r\nimport thunk, {  ThunkDispatch } from 'redux-thunk'\r\n\r\nconst makeStore: MakeStore<RootState>  = (context: Context) => createStore(reducer, applyMiddleware(thunk))\r\n// const makeStore: MakeStore<RootState> = { context: Context }=> createStore(reducer)\r\n\r\nexport const wrapper = createWrapper<RootState>(makeStore, { debug: true })\r\n\r\nexport type NextThunkDispatch = ThunkDispatch<RootState, void, AnyAction>"]},"metadata":{},"sourceType":"module"}