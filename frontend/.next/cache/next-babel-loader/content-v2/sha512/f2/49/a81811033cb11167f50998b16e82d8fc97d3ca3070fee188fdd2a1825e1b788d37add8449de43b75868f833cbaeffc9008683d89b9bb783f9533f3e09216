{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"d:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"d:\\\\visual\\\\js\\\\startReact\\\\startReact1\\\\tryfullstack\\\\tryfrontnew\\\\pages\\\\tracks\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { MainLayout } from '../../MainLayout/MainLayout';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport c from './tracks.module.scss';\nimport axios from 'axios';\nimport { useInput } from '../../hooks/useInput';\n\nconst TrackPage = ({\n  serverTrack\n}) => {\n  _s();\n\n  const {\n    0: track,\n    1: setTrack\n  } = useState(serverTrack);\n  const router = useRouter();\n  const userName = useInput('');\n  const text = useInput('');\n\n  const addComment = async () => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/tracks/comment\", {\n        username: userName.value,\n        text: text.value,\n        trackId: track._id\n      });\n      setTrack(_objectSpread(_objectSpread({}, track), {}, {\n        comments: [...track.comments, res.data]\n      }));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"musi\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => router.push(\"/tracks\"),\n      variant: \"outlined\",\n      style: {\n        fontSize: 32\n      },\n      children: \"to list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: c.pageWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"http://localhost:5000/\" + track.picture,\n        alt: track.name,\n        className: c.trackPageImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.trackPageInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"name:\", track.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"artist:\", track.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"listens:\", track.listens]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"track text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: track.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n        label: \"name\",\n        fullWidth: true\n      }, userName), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n        label: \"comment\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4\n      }, text), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addComment,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: track.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: c.comment,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"username:\", comment.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"text:\", comment.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TrackPage, \"tfTvhmlC13pBQX9qb1WOMppWUrk=\", false, function () {\n  return [useRouter, useInput, useInput];\n});\n\n_c = TrackPage;\nexport var __N_SSP = true;\nexport default TrackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackPage\");","map":{"version":3,"sources":["d:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/pages/tracks/[id].tsx"],"names":["React","useState","MainLayout","Button","Grid","TextField","useRouter","c","axios","useInput","TrackPage","serverTrack","track","setTrack","router","userName","text","addComment","res","post","username","value","trackId","_id","comments","data","e","console","log","push","fontSize","pageWrapper","picture","name","trackPageImg","trackPageInfo","artist","listens","map","comment"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { ITrack } from '../../types/track'\r\nimport { MainLayout } from '../../MainLayout/MainLayout'\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport { useRouter } from 'next/router'\r\nimport c from './tracks.module.scss'\r\nimport { GetServerSideProps } from 'next'\r\nimport axios from 'axios'\r\nimport { useInput } from '../../hooks/useInput'\r\n\r\nconst TrackPage = ({ serverTrack }) => {\r\n    const [track, setTrack] = useState<ITrack>(serverTrack)\r\n    const router = useRouter()\r\n    const userName = useInput('')\r\n    const text = useInput('')\r\n\r\n    const addComment = async () => {\r\n        try {\r\n            const res = await axios.post(\"http://localhost:5000/tracks/comment\", {\r\n                username: userName.value,\r\n                text: text.value,\r\n                trackId: track._id\r\n            })\r\n            setTrack({ ...track, comments: [...track.comments, res.data] })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    return (\r\n        <MainLayout title={\"musi\"}>\r\n            <Button onClick={() => router.push(\"/tracks\")} variant=\"outlined\" style={{ fontSize: 32 }}>\r\n                to list\r\n            </Button>\r\n            <Grid container className={c.pageWrapper}>\r\n                <img src={\"http://localhost:5000/\" + track.picture} alt={track.name} className={c.trackPageImg} />\r\n                <div className={c.trackPageInfo}>\r\n                    <h1>name:{track.name}</h1>\r\n                    <h1>artist:{track.artist}</h1>\r\n                    <h1>listens:{track.listens}</h1>\r\n                </div>\r\n            </Grid>\r\n            <h1>\r\n                track text\r\n            </h1>\r\n            <p>{track.text}</p>\r\n            <h1>Comments</h1>\r\n            <Grid container>\r\n                <TextField\r\n                    label=\"name\"\r\n                    fullWidth\r\n                    {...userName}\r\n                />\r\n                <TextField\r\n                    label=\"comment\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    {...text}\r\n                />\r\n                <Button onClick={addComment}>\r\n                    send\r\n                </Button>\r\n            </Grid>\r\n            <div>\r\n                {track.comments.map((comment) => {\r\n                    return (<div className={c.comment}>\r\n                        <div>username:{comment.username}</div>\r\n                        <div>text:{comment.text}</div>\r\n                    </div>)\r\n                })}\r\n            </div>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default TrackPage\r\n\r\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\r\n    const res = await axios.get(\"http://localhost:5000/tracks/\" + params.id)\r\n    return {\r\n        props: {\r\n            serverTrack: res.data\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}