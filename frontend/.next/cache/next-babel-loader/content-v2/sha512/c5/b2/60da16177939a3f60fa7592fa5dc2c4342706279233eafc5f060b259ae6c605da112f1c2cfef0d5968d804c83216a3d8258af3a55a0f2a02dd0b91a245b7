{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"d:\\\\visual\\\\js\\\\startReact\\\\startReact1\\\\tryfullstack\\\\tryfrontnew\\\\components\\\\Player.tsx\";\nimport { Grid, IconButton } from '@material-ui/core';\nimport { Pause, PlayArrow, VolumeUp } from '@material-ui/icons';\nimport React, { useEffect } from 'react';\nimport c from './TrackItem.module.scss';\nimport TrackProgress from './TrackProgress';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useAction } from '../hooks/useAction';\nlet audio;\n\nconst Player = () => {\n  const track = {\n    _id: '1',\n    name: \"track 1\",\n    artist: \"some1\",\n    text: \"some text1\",\n    listens: 5,\n    audio: \"https://song.link/cXK8Cbv4WGwTW\",\n    picture: \"https://restaurantmomo.com/wp-content/uploads/2020/01/footer-bg.jpg\",\n    comments: []\n  };\n  const {\n    pause,\n    volume,\n    active,\n    duration,\n    currentTime\n  } = useTypedSelector(state => state.player);\n  const {\n    pauseTrack,\n    playTrack,\n    setVolume,\n    setCurrentTime,\n    setDuration,\n    setActive\n  } = useAction();\n  useEffect(() => {\n    if (!audio) {\n      audio = new Audio();\n    } else {\n      setAudio();\n    }\n  }, []);\n\n  const setAudio = () => {\n    if (active) {\n      audio.src = track.audio;\n      audio.volume = volume / 100;\n\n      audio.onloadedmetadata = () => {\n        setDuration(Math.ceil(audio.duration));\n      };\n\n      audio.ontimeupdate = () => {\n        setCurrentTime(Math.ceil(audio.currentTime));\n      };\n    }\n  };\n\n  const play = () => {\n    if (pause) {\n      playTrack();\n      audio.play();\n    } else {\n      pauseTrack();\n      audio.pause();\n    }\n  };\n\n  const changeVolume = e => {\n    audio.volume = Number(e.target.value) / 100;\n    setVolume(Number(e.target.value));\n  };\n\n  const changeCurrentTime = e => {\n    audio.currentTime = Number(e.target.value);\n    setCurrentTime(Number(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c.player,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: play,\n      children: pause ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      display: \"flex\",\n      style: {\n        width: 200,\n        margin: \"0 20px\"\n      },\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.trackName,\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.artist,\n        children: track.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TrackProgress, {\n      left: currentTime,\n      right: duration,\n      onChange: changeCurrentTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VolumeUp, {\n      style: {\n        marginLeft: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TrackProgress, {\n      left: volume,\n      right: 100,\n      onChange: changeVolume\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}; // 1,57,11\n\n\nexport default Player;","map":{"version":3,"sources":["d:/visual/js/startReact/startReact1/tryfullstack/tryfrontnew/components/Player.tsx"],"names":["Grid","IconButton","Pause","PlayArrow","VolumeUp","React","useEffect","c","TrackProgress","useTypedSelector","useAction","audio","Player","track","_id","name","artist","text","listens","picture","comments","pause","volume","active","duration","currentTime","state","player","pauseTrack","playTrack","setVolume","setCurrentTime","setDuration","setActive","Audio","setAudio","src","onloadedmetadata","Math","ceil","ontimeupdate","play","changeVolume","e","Number","target","value","changeCurrentTime","width","margin","trackName","marginLeft"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,oBAA3C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,CAAP,MAAc,yBAAd;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAGA,IAAIC,KAAJ;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,KAAa,GAAG;AAAEC,IAAAA,GAAG,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE,SAAlB;AAA6BC,IAAAA,MAAM,EAAE,OAArC;AAA8CC,IAAAA,IAAI,EAAE,YAApD;AAAkEC,IAAAA,OAAO,EAAE,CAA3E;AAA8EP,IAAAA,KAAK,EAAE,iCAArF;AAAwHQ,IAAAA,OAAO,EAAE,qEAAjI;AAAwMC,IAAAA,QAAQ,EAAE;AAAlN,GAAtB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MAAmDhB,gBAAgB,CAACiB,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAAzE;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA,cAApC;AAAoDC,IAAAA,WAApD;AAAiEC,IAAAA;AAAjE,MAA+EvB,SAAS,EAA9F;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACK,KAAL,EAAY;AACRA,MAAAA,KAAK,GAAG,IAAIuB,KAAJ,EAAR;AACH,KAFD,MAEO;AACHC,MAAAA,QAAQ;AACX;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMA,QAAQ,GAAG,MAAM;AACnB,QAAIZ,MAAJ,EAAY;AACRZ,MAAAA,KAAK,CAACyB,GAAN,GAAYvB,KAAK,CAACF,KAAlB;AACAA,MAAAA,KAAK,CAACW,MAAN,GAAeA,MAAM,GAAG,GAAxB;;AACAX,MAAAA,KAAK,CAAC0B,gBAAN,GAAyB,MAAM;AAC3BL,QAAAA,WAAW,CAACM,IAAI,CAACC,IAAL,CAAU5B,KAAK,CAACa,QAAhB,CAAD,CAAX;AACH,OAFD;;AAGAb,MAAAA,KAAK,CAAC6B,YAAN,GAAqB,MAAM;AACvBT,QAAAA,cAAc,CAACO,IAAI,CAACC,IAAL,CAAU5B,KAAK,CAACc,WAAhB,CAAD,CAAd;AACH,OAFD;AAGH;AACJ,GAXD;;AAaA,QAAMgB,IAAI,GAAG,MAAM;AACf,QAAIpB,KAAJ,EAAW;AACPQ,MAAAA,SAAS;AACTlB,MAAAA,KAAK,CAAC8B,IAAN;AACH,KAHD,MAGO;AACHb,MAAAA,UAAU;AACVjB,MAAAA,KAAK,CAACU,KAAN;AACH;AACJ,GARD;;AAUA,QAAMqB,YAAY,GAAIC,CAAD,IAA4C;AAC7DhC,IAAAA,KAAK,CAACW,MAAN,GAAesB,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAN,GAAyB,GAAxC;AACAhB,IAAAA,SAAS,CAACc,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAT;AACH,GAHD;;AAKA,QAAMC,iBAAiB,GAAIJ,CAAD,IAA4C;AAClEhC,IAAAA,KAAK,CAACc,WAAN,GAAoBmB,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAA1B;AACAf,IAAAA,cAAc,CAACa,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAd;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEvC,CAAC,CAACoB,MAAlB;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEc,IAArB;AAAA,gBACKpB,KAAK,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAe,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAC,QAFd;AAGI,MAAA,OAAO,EAAC,MAHZ;AAII,MAAA,KAAK,EAAE;AAAE2B,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAJX;AAKI,MAAA,cAAc,EAAC,eALnB;AAAA,8BAOI;AAAK,QAAA,SAAS,EAAE1C,CAAC,CAAC2C,SAAlB;AAAA,kBAA8BrC,KAAK,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAK,QAAA,SAAS,EAAER,CAAC,CAACS,MAAlB;AAAA,kBAA2BH,KAAK,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAeI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAES,WAArB;AAAkC,MAAA,KAAK,EAAED,QAAzC;AAAmD,MAAA,QAAQ,EAAEuB;AAA7D;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEI,QAAAA,UAAU,EAAE;AAAd;AAAjB;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAE7B,MAArB;AAA6B,MAAA,KAAK,EAAE,GAApC;AAAyC,MAAA,QAAQ,EAAEoB;AAAnD;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAnED,C,CAoEA;;;AACA,eAAe9B,MAAf","sourcesContent":["import { Grid, IconButton } from '@material-ui/core'\r\nimport { Pause, PlayArrow, VolumeUp } from '@material-ui/icons'\r\nimport React, { useEffect } from 'react'\r\nimport { ITrack } from '../types/track'\r\nimport c from './TrackItem.module.scss'\r\nimport TrackProgress from './TrackProgress'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useAction } from '../hooks/useAction'\r\n\r\n\r\nlet audio\r\n\r\nconst Player = () => {\r\n    const track: ITrack = { _id: '1', name: \"track 1\", artist: \"some1\", text: \"some text1\", listens: 5, audio: \"https://song.link/cXK8Cbv4WGwTW\", picture: \"https://restaurantmomo.com/wp-content/uploads/2020/01/footer-bg.jpg\", comments: [] }\r\n    const { pause, volume, active, duration, currentTime } = useTypedSelector(state => state.player)\r\n    const { pauseTrack, playTrack, setVolume, setCurrentTime, setDuration, setActive } = useAction()\r\n\r\n    useEffect(() => {\r\n        if (!audio) {\r\n            audio = new Audio()\r\n        } else {\r\n            setAudio()\r\n        }\r\n    }, [])\r\n\r\n    const setAudio = () => {\r\n        if (active) {\r\n            audio.src = track.audio\r\n            audio.volume = volume / 100\r\n            audio.onloadedmetadata = () => {\r\n                setDuration(Math.ceil(audio.duration))\r\n            }\r\n            audio.ontimeupdate = () => {\r\n                setCurrentTime(Math.ceil(audio.currentTime))\r\n            }\r\n        }\r\n    }\r\n\r\n    const play = () => {\r\n        if (pause) {\r\n            playTrack()\r\n            audio.play()\r\n        } else {\r\n            pauseTrack()\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    const changeVolume = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        audio.volume = Number(e.target.value) / 100\r\n        setVolume(Number(e.target.value))\r\n    }\r\n\r\n    const changeCurrentTime = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        audio.currentTime = Number(e.target.value)\r\n        setCurrentTime(Number(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className={c.player}>\r\n            <IconButton onClick={play}>\r\n                {pause ? <Pause /> : <PlayArrow />}\r\n            </IconButton>\r\n\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                display=\"flex\"\r\n                style={{ width: 200, margin: \"0 20px\" }}\r\n                justifyContent=\"space-between\"\r\n            >\r\n                <div className={c.trackName}>{track.name}</div>\r\n                <div className={c.artist}>{track.artist}</div>\r\n            </Grid>\r\n            <TrackProgress left={currentTime} right={duration} onChange={changeCurrentTime} />\r\n            <VolumeUp style={{ marginLeft: \"auto\" }} />\r\n            <TrackProgress left={volume} right={100} onChange={changeVolume} />\r\n        </div>\r\n    )\r\n}\r\n// 1,57,11\r\nexport default Player\r\n"]},"metadata":{},"sourceType":"module"}